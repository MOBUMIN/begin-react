{"version":3,"sources":["Hello.js","Wrapper.js","Counter.js","InputSample.js","UserList.js","hooks/useInputs.js","CreateUser.js","ErrorCheck.js","ErrorBoundary.js","components/Button.js","App.js","reportWebVitals.js","index.js"],"names":["Hello","this","props","color","name","isSpecial","style","Component","defaultProps","Wrapper","children","border","padding","margin","Counter","state","counter","handleIncrease","setState","console","log","handleDecrease","onClick","InputSample","useState","input1","input2","inputs","setInputs","oneInput","useRef","onChange","e","target","value","placeholder","ref","current","focus","User","React","memo","user","dispatch","useContext","UserDispatch","cursor","active","type","id","username","email","UserList","users","map","useInputs","initialForm","form","setForm","useCallback","from","CreateUser","reset","nextId","ErrorCheck","variable","check","ErrorBoundary","error","info","Sentry","extra","Button","size","outline","fullWidth","rest","className","classNames","initialState","reducer","action","produce","draft","push","find","index","splice","AppUser","useReducer","count","useMemo","filter","length","countActiveUsers","Provider","createContext","App","backgroundColor","fontSize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","dsn","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAEMA,E,uKAIO,IAAD,EAC2BC,KAAKC,MAA7BC,EADH,EACGA,MAAMC,EADT,EACSA,KAAKC,EADd,EACcA,UAClB,OACI,sBAAKC,MAAS,CAACH,SAAf,UACKE,GAAa,kCADlB,SAEWD,S,GATHG,aAAdP,EACKQ,aAAe,CAClBJ,KAAM,4BAcCJ,Q,OCHAS,MAbf,YAA8B,IAAZC,EAAW,EAAXA,SAMhB,OACE,qBAAKJ,MANO,CACZK,OAAQ,kBACRC,QAAQ,GACRC,OAAO,IAGP,SACKH,KCqBMI,E,4MA5BXC,MAAQ,CACJC,QAAQ,G,EAEZC,eAAiB,WACb,EAAKC,UAAS,SAAAH,GAAK,MAAK,CACpBC,QAASD,EAAMC,QAAQ,MAE3B,WACIG,QAAQC,IAAI,EAAKL,MAAMC,a,EAI/BK,eAAiB,WACb,EAAKH,UAAS,SAAAH,GAAK,MAAK,CACpBC,QAASD,EAAMC,QAAQ,O,uDAI3B,OACI,gCACI,6BAAKf,KAAKc,MAAMC,UAChB,wBAAQM,QAASrB,KAAKgB,eAAtB,gBACA,wBAAQK,QAASrB,KAAKoB,eAAtB,uB,GAvBMd,a,gBC0CPgB,MAzCf,WAAuB,IAAD,EACUC,mBAAS,CACjCC,OAAS,GAAIC,OAAQ,KAFP,mBACXC,EADW,KACHC,EADG,KAIZC,EAASC,mBACRL,EAAiBE,EAAjBF,OAAOC,EAAUC,EAAVD,OAERK,EAAW,SAACC,GAAM,IAAD,EACKA,EAAEC,OAAlBC,EADW,EACXA,MAAO9B,EADI,EACJA,KACfwB,EAAU,2BACHD,GADE,kBAEJvB,EAAO8B,MAWhB,OACI,gCACI,uBACA9B,KAAK,SACL+B,YAAY,gBACZJ,SAAUA,EACVG,MAAOT,EACPW,IAAKP,IAEL,uBAAOzB,KAAK,SAAS+B,YAAY,gBAAMJ,SAAUA,EAAUG,MAAOR,IAClE,wBAAQJ,QAjBF,WACVM,EAAU,CACNH,OAAQ,GAAIC,OAAQ,KAExBG,EAASQ,QAAQC,SAab,mBACA,gCACI,yCACCb,EAFL,KAEeC,EAFf,WCjCNa,EAAOC,IAAMC,MAAK,YAAwB,IAARC,EAAO,EAAPA,KAC9BC,EAAWC,qBAAWC,GAE5B,OACI,gCACI,mBAAGvC,MAAO,CACNwC,OAAO,UAAU3C,MAAMuC,EAAKK,OAAS,QAAU,SAEnDzB,QAAS,WACLqB,EAAS,CAAEK,KAAM,cAAeC,GAAIP,EAAKO,MAJ7C,SAKIP,EAAKQ,WACT,qCAAQR,EAAKS,MAAb,OACA,wBAAQ7B,QAAS,WACbqB,EAAS,CAAEK,KAAK,cAAeC,GAAIP,EAAKO,MAD5C,gCAOZ,SAASG,EAAT,GAA6B,IAATC,EAAQ,EAARA,MAChB,OACI,8BACKA,EAAMC,KAAI,SAAAZ,GAAI,OACX,cAAC,EAAD,CAAMA,KAAMA,GAAWA,EAAKO,SAM7BT,UAAMC,KAAKW,GCjBXG,MAbf,SAAmBC,GAAa,IAAD,EACHhC,mBAASgC,GADN,mBACpBC,EADoB,KACdC,EADc,KAU3B,MAAM,CAACD,EAPUE,uBAAY,SAAA3B,GAAI,IAAD,EACPA,EAAEC,OAAhB7B,EADqB,EACrBA,KAAK8B,EADgB,EAChBA,MACZwB,GAAQ,SAAAE,GAAI,kCAAOA,GAAP,kBAAcxD,EAAM8B,SACjC,IAESyB,uBAAY,kBAAID,EAAQF,KAAa,CAACA,MCNtD,SAASK,IAAa,IAAD,EAC8BN,EAAU,CACrDL,SAAS,GAAGC,MAAM,KAFL,0BACRD,EADQ,EACRA,SAAUC,EADF,EACEA,MAASpB,EADX,KACqB+B,EADrB,KAIXC,EAASjC,iBAAO,GAChBa,EAAWC,qBAAWC,GAa5B,OACI,gCACI,uBACIzC,KAAK,WACL+B,YAAY,qBACZJ,SAAUA,EACVG,MAAOgB,IACX,uBACI9C,KAAK,QACL+B,YAAY,qBACZJ,SAAUA,EACVG,MAAOiB,IACX,wBAAQ7B,QAxBD,WACXqB,EAAS,CACLK,KAAM,cACNN,KAAM,CACFO,GAAGc,EAAO1B,QACVa,WACAC,WAGRW,IACAC,EAAO1B,SAAW,GAcd,6BAKGG,UAAMC,KAAKoB,G,QCrBXG,MAhBf,YAAgC,IAAXC,EAAU,EAAVA,SAIjB,OACI,gCACI,gCACI,sCADJ,KACmBA,EAASC,SAE5B,gCACI,0CADJ,KACuBD,EAAS7D,Y,iBCkB7B+D,E,4MAzBXpD,MAAM,CACFqD,OAAM,G,gEAGQA,EAAOC,GACrBlD,QAAQC,IAAI,eACZD,QAAQC,IAAI,CACRgD,QAAMC,SAEVpE,KAAKiB,SAAS,CACVkD,OAAM,IAGNE,IAAwBF,EAAO,CAAEG,MAAOF,M,+BAK5C,OAAGpE,KAAKc,MAAMqD,MACH,wCAEJnE,KAAKC,MAAMQ,a,GAtBEH,a,kCCA5B,SAASiE,EAAT,GAAoE,IAAlD9D,EAAiD,EAAjDA,SAAS+D,EAAwC,EAAxCA,KAAKtE,EAAmC,EAAnCA,MAAMuE,EAA6B,EAA7BA,QAAQC,EAAqB,EAArBA,UAAcC,EAAO,iEAC/D,OACA,gDACAC,UAAWC,IAAW,SAASL,EAAKtE,EAAM,CAACuE,UAAQC,eAC/CC,GAFJ,aAIClE,KAIL8D,EAAOhE,aAAa,CAChBiE,KAAK,SACLtE,MAAM,QAEKqE,QCoEf,IAAMO,EAAa,CACjBpD,OAAO,CACLuB,SAAS,GAAGC,MAAM,IAEpBE,MAAM,CACJ,CACEJ,GAAG,EAAEC,SAAS,WAAWC,MAAM,cAAcJ,QAAO,GAEtD,CACEE,GAAG,EAAEC,SAAS,SAASC,MAAM,gBAAgBJ,QAAO,GAEtD,CACEE,GAAG,EAAEC,SAAS,QAAQC,MAAM,mBAAmBJ,QAAO,KAK5D,SAASiC,EAAQjE,EAAMkE,GACrB,OAAOA,EAAOjC,MACZ,IAAK,cACH,OAAOkC,YAAQnE,GAAO,SAAAoE,GACpBA,EAAM9B,MAAM+B,KAAKH,EAAOvC,SAE5B,IAAK,cACH,OAAOwC,YAAQnE,GAAO,SAAAoE,GACpB,IAAMzC,EAAOyC,EAAM9B,MAAMgC,MAAK,SAAA3C,GAAI,OAAEA,EAAKO,KAAKgC,EAAOhC,MACrDP,EAAKK,QAAUL,EAAKK,UAExB,IAAK,cACH,OAAOmC,YAAQnE,GAAO,SAAAoE,GACpB,IAAMG,EAAQH,EAAM9B,MAAMgC,MAAK,SAAA3C,GAAI,OAAEA,EAAKO,KAAKgC,EAAOhC,MACtDkC,EAAM9B,MAAMkC,OAAOD,EAAO,MAE9B,QACE,OAAOvE,GAIb,SAASyE,IAAU,IAAD,EACUC,qBAAWT,EAASD,GAD9B,mBACThE,EADS,KACF4B,EADE,KAGTU,EAAOtC,EAAPsC,MAEDqC,EAAQC,mBAAQ,kBAWxB,SAA0BtC,GAExB,OADAlC,QAAQC,IAAI,2DACLiC,EAAMuC,QAAO,SAAAlD,GAAI,OAAEA,EAAKK,UAAQ8C,OAbbC,CAAiBzC,KAAO,CAACA,IAEnD,OACE,eAACR,EAAakD,SAAd,CAAuB7D,MAASS,EAAhC,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAUU,MAAOA,IACjB,iDAAoBqC,QAUnB,IAAM7C,EAAeL,IAAMwD,cAAc,MAGjCC,EArIf,WAWE,OACE,qCACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAO7F,KAAK,uCAASD,MAAM,MAAME,WAAS,IAC1C,cAAC,EAAD,IACA,qBAAKC,MAdG,CACZ4F,gBAAiB,QACjB/F,MAAO,OACPgG,SAAS,GACTvF,QAAS,QAUL,SAfO,eAgBP,qBAAKiE,UAAU,gBAGjB,cAAC,EAAD,UACE,cAAC,EAAD,MAGF,cAAC,EAAD,UACE,cAAC,EAAD,MAGF,cAAC,EAAD,UACE,cAACW,EAAD,MAGF,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAYvB,SA1BH,CACfC,MAAO,EAAG9D,KAAM,eA6Bd,cAAC,EAAD,UACE,sBAAKyE,UAAU,MAAf,UACE,sBAAKA,UAAU,UAAf,UACE,cAAC,EAAD,CAAQJ,KAAK,QAAQnD,QAAS,kBAAIH,QAAQC,IAAI,WAA9C,oBACA,cAAC,EAAD,qBACA,cAAC,EAAD,CAAQqD,KAAK,QAAb,uBAEF,sBAAKI,UAAU,UAAf,UACE,cAAC,EAAD,CAAQJ,KAAK,QAAQtE,MAAM,SAA3B,oBACA,cAAC,EAAD,CAAQA,MAAM,SAAd,oBACA,cAAC,EAAD,CAAQsE,KAAK,QAAQtE,MAAM,SAA3B,uBAEF,sBAAK0E,UAAU,UAAf,UACE,cAAC,EAAD,CAAQJ,KAAK,QAAQtE,MAAM,QAA3B,oBACA,cAAC,EAAD,CAAQA,MAAM,QAAd,oBACA,cAAC,EAAD,CAAQsE,KAAK,QAAQtE,MAAM,QAA3B,uBAEF,sBAAK0E,UAAU,UAAf,UACE,cAAC,EAAD,CAAQJ,KAAK,QAAQtE,MAAM,OAAOuE,SAAO,EAAzC,oBACA,cAAC,EAAD,CAAQvE,MAAM,SAASuE,SAAO,EAA9B,oBACA,cAAC,EAAD,CAAQD,KAAK,QAAQtE,MAAM,QAAQuE,SAAO,EAA1C,uBAEF,sBAAKG,UAAU,UAAf,UACE,cAAC,EAAD,CAAQJ,KAAK,QAAQtE,MAAM,OAAOwE,WAAS,EAA3C,oBACA,cAAC,EAAD,CAAQxE,MAAM,SAASwE,WAAS,EAAhC,oBACA,cAAC,EAAD,CAAQF,KAAK,QAAQtE,MAAM,QAAQwE,WAAS,EAA5C,gCClEGyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCAd/B,EAAY,CACVuC,IAAK,8EAGPC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.4e6d0645.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Hello extends Component{\r\n    static defaultProps = {\r\n        name: '노프롭스'\r\n    }\r\n    render(){\r\n        const {color,name,isSpecial} = this.props;\r\n        return(\r\n            <div style = {{color}}>\r\n                {isSpecial && <b>*</b>}\r\n                Hello {name}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Hello;","import React from 'react';\r\n\r\nfunction Wrapper({children}) {\r\n  const style = {\r\n    border: '2px solid black',\r\n    padding:16,\r\n    margin:16,\r\n  };\r\n  return (\r\n    <div style={style}>\r\n        {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Wrapper;","import React, { Component } from 'react';\r\n\r\nclass Counter extends Component{\r\n    state = {\r\n        counter:0\r\n    };\r\n    handleIncrease = () => {\r\n        this.setState(state => ({\r\n            counter: state.counter+1\r\n        }),\r\n        ()=>{\r\n            console.log(this.state.counter);\r\n        }\r\n        );\r\n    }\r\n    handleDecrease = () => {\r\n        this.setState(state => ({\r\n            counter: state.counter-1\r\n        }));\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>{this.state.counter}</h1>\r\n                <button onClick={this.handleIncrease}>+1</button>\r\n                <button onClick={this.handleDecrease}>-1</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Counter;","import React, {useState, useRef} from 'react';\r\n\r\n// input 에 입력하는 값이 하단에 나타나게 하고, 초기화 버튼을 누르면 input 이 값이 비워지도록\r\nfunction InputSample(){\r\n    const [inputs, setInputs] = useState({\r\n        input1 : '', input2: ''\r\n    })\r\n    const oneInput=useRef();\r\n    const {input1,input2} = inputs;\r\n\r\n    const onChange = (e) =>{\r\n        const { value, name } = e.target;\r\n        setInputs({\r\n            ...inputs,\r\n            [name]: value\r\n        })\r\n    }\r\n    \r\n    const onReset=()=>{\r\n        setInputs({\r\n            input1: '', input2: '',\r\n        });\r\n        oneInput.current.focus();\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <input \r\n            name=\"input1\"\r\n            placeholder=\"인풋1\"\r\n            onChange={onChange}\r\n            value={input1}\r\n            ref={oneInput}\r\n            />\r\n            <input name=\"input2\" placeholder=\"인풋2\" onChange={onChange} value={input2}/>\r\n            <button onClick={onReset}>reset</button>\r\n            <div>\r\n                <b>value : </b>\r\n                {input1} ({input2})\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputSample;","import React, { useContext } from 'react';\r\nimport { UserDispatch } from './App';\r\n\r\nconst User = React.memo(function User({ user }){\r\n    const dispatch = useContext(UserDispatch);\r\n\r\n    return(\r\n        <div>\r\n            <b style={{\r\n                cursor:'pointer',color:user.active ? 'green' : 'black'\r\n            }}\r\n            onClick={()=>{\r\n                dispatch({ type: 'TOGGLE_USER', id: user.id });\r\n            }}>{user.username}</b>\r\n            <span>({user.email})</span>\r\n            <button onClick={()=> {\r\n                dispatch({ type:'REMOVE_USER', id: user.id });\r\n            }}>삭제</button>\r\n        </div>\r\n    )\r\n});\r\n\r\nfunction UserList({ users }){\r\n    return(\r\n        <div>\r\n            {users.map(user => (\r\n                <User user={user} key={user.id} />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(UserList);","import {useState, useCallback} from 'react';\r\n\r\nfunction useInputs(initialForm){\r\n    const [form, setForm] = useState(initialForm);\r\n    //change\r\n    const onChange = useCallback(e=>{\r\n        const {name,value} = e.target;\r\n        setForm(from=>({...from, [name]:value}));\r\n    }, []);\r\n\r\n    const reset=useCallback(()=>setForm(initialForm),[initialForm]);\r\n    \r\n    return[form,onChange,reset];\r\n}\r\n\r\nexport default useInputs;","import React, { useRef, useContext } from 'react';\r\nimport useInputs from './hooks/useInputs';\r\nimport { UserDispatch } from './App';\r\n\r\nfunction CreateUser(){\r\n    const [{ username, email }, onChange, reset] = useInputs({\r\n        username:'',email:''\r\n    });\r\n    const nextId = useRef(4);\r\n    const dispatch = useContext(UserDispatch);\r\n    const onCreate=()=>{\r\n        dispatch({\r\n            type: 'CREATE_USER',\r\n            user: {\r\n                id:nextId.current,\r\n                username,\r\n                email\r\n            }\r\n        });\r\n        reset();\r\n        nextId.current += 1;\r\n    }\r\n    return(\r\n        <div>\r\n            <input\r\n                name=\"username\"\r\n                placeholder=\"계정명\"\r\n                onChange={onChange}\r\n                value={username} />\r\n            <input\r\n                name=\"email\"\r\n                placeholder=\"이메일\"\r\n                onChange={onChange}\r\n                value={email} />\r\n            <button onClick={onCreate}>등록</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(CreateUser);","import React from 'react';\r\n\r\nfunction ErrorCheck({variable}){\r\n    // if(!variable){\r\n    //     return <div> no variable . . . loading . . .</div>;\r\n    // }\r\n    return(\r\n        <div>\r\n            <div>\r\n                <b>ERROR</b>: {variable.check}\r\n            </div>\r\n            <div>\r\n                <b>ErrorName</b>: {variable.name}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ErrorCheck;","import { findAllByTestId } from '@testing-library/react';\r\nimport React, { Component } from 'react';\r\nimport * as Sentry from '@sentry/browser';\r\n\r\nclass ErrorBoundary extends Component{\r\n    state={\r\n        error:false\r\n    };\r\n\r\n    componentDidCatch(error, info){\r\n        console.log('Error catch');\r\n        console.log({\r\n            error,info\r\n        });\r\n        this.setState({\r\n            error:true\r\n        });\r\n        if(process.env.NODE_ENV === 'production'){\r\n            Sentry.captureException(error, { extra: info });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(this.state.error){\r\n            return <h1>error!</h1>;\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport './Button.scss';\r\n\r\nfunction Button( {children,size,color,outline,fullWidth, ...rest} ){\r\n    return(\r\n    <button\r\n    className={classNames('Button',size,color,{outline,fullWidth})}\r\n    {...rest}\r\n    >\r\n    {children}\r\n    </button>\r\n    );\r\n}\r\nButton.defaultProps={\r\n    size:'medium',\r\n    color:'blue'\r\n};\r\nexport default Button;","import React, { useMemo, useReducer } from 'react';\r\n//import ReactDOM from 'react-dom';\r\nimport Hello from './Hello';\r\nimport './App.scss';\r\nimport Wrapper from './Wrapper';\r\nimport Counter from './Counter';\r\nimport InputSample from './InputSample';\r\nimport UserList from './UserList';\r\nimport CreateUser from './CreateUser';\r\nimport produce from 'immer';\r\nimport ErrorCheck from './ErrorCheck';\r\nimport ErrorBoundary from './ErrorBoundary';\r\nimport Button from './components/Button';\r\n\r\n// ReactDOM.render(<Counter />, document.getElementById('root'));\r\nfunction App() {\r\n  const name = 'helloworld';\r\n  const style = {\r\n    backgroundColor: 'black',\r\n    color: 'aqua',\r\n    fontSize:24,\r\n    padding: '1rem'\r\n  };\r\n  const variable = {\r\n    check: 1, name: 'error'\r\n  };\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <Hello name=\"이것은프롭스\" color=\"red\" isSpecial />\r\n        <Hello />\r\n        <div style = {style}>{name}</div>\r\n        <div className=\"gray-box\"></div>\r\n      </Wrapper>\r\n\r\n      <Wrapper>\r\n        <Counter />\r\n      </Wrapper>\r\n      \r\n      <Wrapper>\r\n        <InputSample />\r\n      </Wrapper>\r\n\r\n      <Wrapper>\r\n        <AppUser />\r\n      </Wrapper>\r\n\r\n      <Wrapper>\r\n        <ErrorBoundary>\r\n          <ErrorCheck variable={variable} />\r\n        </ErrorBoundary>\r\n      </Wrapper>\r\n\r\n      <Wrapper>\r\n        <div className=\"App\">\r\n          <div className=\"buttons\">\r\n            <Button size=\"large\" onClick={()=>console.log('click!')}>BUTTON</Button>\r\n            <Button>BUTTON</Button>\r\n            <Button size=\"small\">BUTTON</Button>\r\n          </div>\r\n          <div className=\"buttons\">\r\n            <Button size=\"large\" color=\"orange\">BUTTON</Button>\r\n            <Button color=\"orange\">BUTTON</Button>\r\n            <Button size=\"small\" color=\"orange\">BUTTON</Button>\r\n          </div>\r\n          <div className=\"buttons\">\r\n            <Button size=\"large\" color=\"green\">BUTTON</Button>\r\n            <Button color=\"green\">BUTTON</Button>\r\n            <Button size=\"small\" color=\"green\">BUTTON</Button>\r\n          </div>\r\n          <div className=\"buttons\">\r\n            <Button size=\"large\" color=\"blue\" outline>BUTTON</Button>\r\n            <Button color=\"orange\" outline>BUTTON</Button>\r\n            <Button size=\"small\" color=\"green\" outline>BUTTON</Button>\r\n          </div>\r\n          <div className=\"buttons\">\r\n            <Button size=\"large\" color=\"blue\" fullWidth>BUTTON</Button>\r\n            <Button color=\"orange\" fullWidth>BUTTON</Button>\r\n            <Button size=\"small\" color=\"green\" fullWidth>BUTTON</Button>\r\n          </div>\r\n        </div>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nconst initialState={\r\n  inputs:{\r\n    username:'',email:''\r\n  },\r\n  users:[\r\n    {\r\n      id:1,username:'velopert',email:'p@gmail.com',active:true\r\n    },\r\n    {\r\n      id:2,username:'tester',email:'t@example.com',active:false\r\n    },\r\n    {\r\n      id:3,username:'subin',email:'kiju23@naver.com',active:false\r\n    }\r\n  ]\r\n};\r\n\r\nfunction reducer(state,action){\r\n  switch(action.type){\r\n    case 'CREATE_USER':\r\n      return produce(state, draft=>{\r\n        draft.users.push(action.user);\r\n      });\r\n    case 'TOGGLE_USER':\r\n      return produce(state, draft=>{\r\n        const user = draft.users.find(user=>user.id===action.id);\r\n        user.active = !user.active;\r\n      });\r\n    case 'REMOVE_USER':\r\n      return produce(state, draft=>{\r\n        const index = draft.users.find(user=>user.id===action.id);\r\n        draft.users.splice(index, 1);\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction AppUser(){\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const {users}=state;\r\n\r\n  const count = useMemo(()=>countActiveUsers(users),[users]);\r\n\r\n  return(\r\n    <UserDispatch.Provider value = {dispatch}>\r\n      <CreateUser />\r\n      <UserList users={users}/>\r\n      <div>active user : {count}</div>\r\n    </UserDispatch.Provider>\r\n  )\r\n}\r\n\r\nfunction countActiveUsers(users){\r\n  console.log('active 사용자 수 세는 중...');\r\n  return users.filter(user=>user.active).length;\r\n}\r\n\r\nexport const UserDispatch = React.createContext(null);\r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as Sentry from \"@sentry/react\";\r\n\r\nSentry.init({\r\n  dsn: \"https://8dc86859035f4ffdba74c4638c5f790a@o485115.ingest.sentry.io/5539771\"\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}