{"version":3,"sources":["Hello.js","Wrapper.js","Counter.js","InputSample.js","UserList.js","CreateUser.js","App.js","reportWebVitals.js","index.js"],"names":["Hello","color","name","isSpecial","style","defaultProps","Wrapper","children","border","padding","margin","Counter","useState","number","setNumber","onClick","prevNumber","InputSample","input1","input2","inputs","setInputs","oneInput","useRef","onChange","e","target","value","placeholder","ref","current","focus","User","user","onRemove","onToggle","useEffect","console","log","cursor","active","id","username","email","UserList","users","map","CreateUser","onCreate","AppUser","setUsers","nextId","count","useMemo","filter","length","countActiveUsers","App","backgroundColor","fontSize","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.022f94b7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Hello({color, name, isSpecial}) {\r\n  return <div style={{ color }}>\r\n      { isSpecial && <b>*</b>}\r\n      헬로월드 {name}\r\n      </div>\r\n}\r\n\r\nHello.defaultProps={\r\n    name: '노프롭스'\r\n}\r\n\r\nexport default Hello;","import React from 'react';\r\n\r\nfunction Wrapper({children}) {\r\n  const style = {\r\n    border: '2px solid black',\r\n    padding:16,\r\n    margin:16,\r\n  };\r\n  return (\r\n    <div style={style}>\r\n        {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Wrapper;","import React, { useState } from 'react';\r\n\r\nfunction Counter(){\r\n    // [현재 상태, Setter 함수]\r\n    const [number, setNumber] = useState(0);\r\n\r\n    const onIncrease = () => {\r\n        setNumber(prevNumber => prevNumber+1);\r\n    }\r\n    const onDecrease = () => {\r\n        setNumber(prevNumber => prevNumber-1);\r\n    }\r\n    return(\r\n        <div>\r\n            <h1>{number}</h1>\r\n            <button onClick={onIncrease}>+1</button>\r\n            <button onClick={onDecrease}>-1</button>\r\n        </div>\r\n    );\r\n}\r\nexport default Counter;","import React, {useState, useRef} from 'react';\r\n\r\n// input 에 입력하는 값이 하단에 나타나게 하고, 초기화 버튼을 누르면 input 이 값이 비워지도록\r\nfunction InputSample(){\r\n    const [inputs, setInputs] = useState({\r\n        input1 : '', input2: ''\r\n    })\r\n    const oneInput=useRef();\r\n    const {input1,input2} = inputs;\r\n\r\n    const onChange = (e) =>{\r\n        const { value, name } = e.target;\r\n        setInputs({\r\n            ...inputs,\r\n            [name]: value\r\n        })\r\n    }\r\n    \r\n    const onReset=()=>{\r\n        setInputs({\r\n            input1: '', input2: '',\r\n        });\r\n        oneInput.current.focus();\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <input \r\n            name=\"input1\"\r\n            placeholder=\"인풋1\"\r\n            onChange={onChange}\r\n            value={input1}\r\n            ref={oneInput}\r\n            />\r\n            <input name=\"input2\" placeholder=\"인풋2\" onChange={onChange} value={input2}/>\r\n            <button onClick={onReset}>reset</button>\r\n            <div>\r\n                <b>value : </b>\r\n                {input1} ({input2})\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputSample;","import React, {useEffect} from 'react';\r\n\r\nfunction User({ user, onRemove, onToggle }){\r\n    useEffect(()=>{\r\n        console.log('유저 세팅됨! ');\r\n        console.log(user);\r\n        return()=>{\r\n            console.log('유저 바뀌기 전...');\r\n            console.log(user);\r\n        };\r\n    }, [user]);\r\n    // useEffect(()=>{\r\n    //     console.log(user);\r\n    // });\r\n    return(\r\n        <div>\r\n            <b style={{\r\n                cursor:'pointer',color:user.active ? 'green' : 'black'\r\n            }}\r\n            onClick={()=> onToggle(user.id)}>{user.username}</b>\r\n            <span>({user.email})</span>\r\n            <button onClick={()=> onRemove(user.id)}>삭제</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction UserList({ users, onRemove, onToggle }){\r\n    return(\r\n        <div>\r\n            {users.map(user => (\r\n                <User user={user} key={user.id} onRemove={onRemove} onToggle={onToggle}/>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserList;","import React from 'react';\r\n\r\nfunction CreateUser({ username, email, onChange, onCreate}){\r\n    return(\r\n        <div>\r\n            <input\r\n                name=\"username\"\r\n                placeholder=\"계정명\"\r\n                onChange={onChange}\r\n                value={username} />\r\n            <input\r\n                name=\"email\"\r\n                placeholder=\"이메일\"\r\n                onChange={onChange}\r\n                value={email} />\r\n            <button onClick={onCreate}>등록</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateUser;","import React, { useRef, useState, useMemo } from 'react';\nimport Hello from './Hello';\nimport './App.css';\nimport Wrapper from './Wrapper';\nimport Counter from './Counter';\nimport InputSample from './InputSample';\nimport UserList from './UserList';\nimport CreateUser from './CreateUser';\n\nfunction App() {\n  const name = 'helloworld';\n  const style = {\n    backgroundColor: 'black',\n    color: 'aqua',\n    fontSize:24,\n    padding: '1rem'\n  };\n  return (\n    <>\n      <Wrapper>\n        <Hello name=\"이것은프롭스\" color=\"red\" isSpecial />\n        <Hello />\n        <div style = {style}>{name}</div>\n        <div className=\"gray-box\"></div>\n      </Wrapper>\n\n      <Wrapper>\n        <Counter />\n      </Wrapper>\n      \n      <Wrapper>\n        <InputSample />\n      </Wrapper>\n\n      <Wrapper>\n        <AppUser />\n      </Wrapper>\n    </>\n  );\n}\n\nfunction AppUser(){\n  const [inputs, setInputs] = useState({\n    username: '', email: ''\n  });\n  const {username, email} = inputs;\n  const onChange=(e)=>{\n    const {name, value} = e.target;\n    setInputs({\n      ...inputs,\n      [name]:value\n    });\n  };\n  const [users, setUsers]= useState([\n    {\n      id:1,username:'velopert',email:'p@gmail.com',active:true\n    },\n    {\n      id:2,username:'tester',email:'t@example.com',active:false\n    },\n    {\n      id:3,username:'subin',email:'kiju23@naver.com',active:false\n    }\n  ]);\n  const nextId = useRef(4);\n  const onCreate = () => {\n    const user={\n      id: nextId.current,username,email\n    };\n    setUsers([...users, user]);\n    // setUsers(users.concat(user));\n    setInputs({\n      username: '', email: ''\n    });\n    nextId.current+=1;\n  };\n  \n  const onRemove = id => {\n    // 일치하는 user.id를 제외하고 새로운 배열을 만듦\n    setUsers(users.filter(user=>user.id!==id));\n  };\n\n  const onToggle = id =>{\n    setUsers(\n      users.map(user=>\n        user.id === id ? {...user,active: !user.active}:user\n        )\n    );\n  };\n  const count = useMemo(()=>countActiveUsers(users),[users]);\n  return(\n    <>\n      <CreateUser\n        username={username}\n        email={email}\n        onChange={onChange}\n        onCreate={onCreate}\n      />\n      <UserList users={users} onRemove={onRemove} onToggle={onToggle} />\n      <div>active 사용자 수 : {count}</div>\n    </>\n  )\n}\n\nfunction countActiveUsers(users){\n  console.log('active 사용자 수 세는 중...');\n  return users.filter(user=>user.active).length;\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}