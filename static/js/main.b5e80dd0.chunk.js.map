{"version":3,"sources":["Hello.js","Wrapper.js","Counter.js","InputSample.js","UserList.js","CreateUser.js","hooks/useInputs.js","App.js","reportWebVitals.js","index.js"],"names":["Hello","color","name","isSpecial","style","defaultProps","Wrapper","children","border","padding","margin","reducer","state","action","type","Counter","useReducer","number","dispatch","onClick","InputSample","useState","input1","input2","inputs","setInputs","oneInput","useRef","onChange","e","target","value","placeholder","ref","current","focus","User","user","onRemove","onToggle","useEffect","console","log","cursor","active","id","username","email","UserList","users","map","React","memo","CreateUser","onCreate","Object","keys","reduce","acc","useInputs","initialForm","form","useCallback","dispatchEvent","initialState","concat","filter","AppUser","reset","nextID","count","useMemo","length","countActiveUsers","App","backgroundColor","fontSize","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5e80dd0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Hello({color, name, isSpecial}) {\r\n  return <div style={{ color }}>\r\n      { isSpecial && <b>*</b>}\r\n      헬로월드 {name}\r\n      </div>\r\n}\r\n\r\nHello.defaultProps={\r\n    name: '노프롭스'\r\n}\r\n\r\nexport default Hello;","import React from 'react';\r\n\r\nfunction Wrapper({children}) {\r\n  const style = {\r\n    border: '2px solid black',\r\n    padding:16,\r\n    margin:16,\r\n  };\r\n  return (\r\n    <div style={style}>\r\n        {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Wrapper;","import React, { useState, useReducer } from 'react';\r\n\r\nfunction reducer(state, action){\r\n    switch(action.type){\r\n        case 'INCREMENT':\r\n            return state+1;\r\n        case 'DECREMENT':\r\n            return state-1;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction Counter(){\r\n    // reducer\r\n    const [number, dispatch] = useReducer(reducer, 0);\r\n\r\n    const onIncrease=()=>{\r\n        dispatch({type:'INCREMENT'});\r\n    };\r\n    const onDecrease=()=>{\r\n        dispatch({type:'DECREMENT'});\r\n    };\r\n    return(\r\n        <div>\r\n            <h1>{number}</h1>\r\n            <button onClick={onIncrease}>+1</button>\r\n            <button onClick={onDecrease}>-1</button>\r\n        </div>\r\n    );\r\n    // [현재 상태, Setter 함수]\r\n    // const [number, setNumber] = useState(0);\r\n\r\n    // const onIncrease = () => {\r\n    //     setNumber(prevNumber => prevNumber+1);\r\n    // }\r\n    // const onDecrease = () => {\r\n    //     setNumber(prevNumber => prevNumber-1);\r\n    // }\r\n    // return(\r\n    //     <div>\r\n    //         <h1>{number}</h1>\r\n    //         <button onClick={onIncrease}>+1</button>\r\n    //         <button onClick={onDecrease}>-1</button>\r\n    //     </div>\r\n    // );\r\n}\r\nexport default Counter;","import React, {useState, useRef} from 'react';\r\n\r\n// input 에 입력하는 값이 하단에 나타나게 하고, 초기화 버튼을 누르면 input 이 값이 비워지도록\r\nfunction InputSample(){\r\n    const [inputs, setInputs] = useState({\r\n        input1 : '', input2: ''\r\n    })\r\n    const oneInput=useRef();\r\n    const {input1,input2} = inputs;\r\n\r\n    const onChange = (e) =>{\r\n        const { value, name } = e.target;\r\n        setInputs({\r\n            ...inputs,\r\n            [name]: value\r\n        })\r\n    }\r\n    \r\n    const onReset=()=>{\r\n        setInputs({\r\n            input1: '', input2: '',\r\n        });\r\n        oneInput.current.focus();\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <input \r\n            name=\"input1\"\r\n            placeholder=\"인풋1\"\r\n            onChange={onChange}\r\n            value={input1}\r\n            ref={oneInput}\r\n            />\r\n            <input name=\"input2\" placeholder=\"인풋2\" onChange={onChange} value={input2}/>\r\n            <button onClick={onReset}>reset</button>\r\n            <div>\r\n                <b>value : </b>\r\n                {input1} ({input2})\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputSample;","import React, {useEffect} from 'react';\r\n\r\nfunction User({ user, onRemove, onToggle }){\r\n    useEffect(()=>{\r\n        console.log('유저 세팅됨! ');\r\n        console.log(user);\r\n        return()=>{\r\n            console.log('유저 바뀌기 전...');\r\n            console.log(user);\r\n        };\r\n    }, [user]);\r\n    // useEffect(()=>{\r\n    //     console.log(user);\r\n    // });\r\n    return(\r\n        <div>\r\n            <b style={{\r\n                cursor:'pointer',color:user.active ? 'green' : 'black'\r\n            }}\r\n            onClick={()=> onToggle(user.id)}>{user.username}</b>\r\n            <span>({user.email})</span>\r\n            <button onClick={()=> onRemove(user.id)}>삭제</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction UserList({ users, onRemove, onToggle }){\r\n    return(\r\n        <div>\r\n            {users.map(user => (\r\n                <User user={user} key={user.id} onRemove={onRemove} onToggle={onToggle}/>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(UserList);","import React from 'react';\r\n\r\nfunction CreateUser({ username, email, onChange, onCreate}){\r\n    return(\r\n        <div>\r\n            <input\r\n                name=\"username\"\r\n                placeholder=\"계정명\"\r\n                onChange={onChange}\r\n                value={username} />\r\n            <input\r\n                name=\"email\"\r\n                placeholder=\"이메일\"\r\n                onChange={onChange}\r\n                value={email} />\r\n            <button onClick={onCreate}>등록</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(CreateUser);","import {useReducer, useCallback} from 'react';\r\n\r\nfunction reducer(state, action){\r\n    switch(action.type){\r\n        case 'CHANGE':\r\n            return{\r\n                ...state,\r\n                [action.name]:action.value\r\n            };\r\n        case 'RESET':\r\n            return Object.keys(state).reduce((acc,current)=>{\r\n                acc[current]='';\r\n                return acc;\r\n            }, {});\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction useInputs(initialForm){\r\n    const [form, dispatch] = useReducer(reducer, initialForm);\r\n    //change\r\n    const onChange = useCallback(e=>{\r\n        const {name,value} = e.target;\r\n        dispatchEvent({type:'CHANGE', name, value});\r\n    }, []);\r\n\r\n    const reset=useCallback(()=>dispatch({type:'RESET'}),[]);\r\n    \r\n    return[form,onChange,reset];\r\n}\r\n\r\nexport default useInputs;","import React, { useRef, useState, useMemo, useCallback, useReducer } from 'react';\nimport ReactDOM from 'react-dom';\nimport Hello from './Hello';\nimport './App.css';\nimport Wrapper from './Wrapper';\nimport Counter from './Counter';\nimport InputSample from './InputSample';\nimport UserList from './UserList';\nimport CreateUser from './CreateUser';\nimport useInputs from './hooks/useInputs';\n\n// ReactDOM.render(<Counter />, document.getElementById('root'));\nfunction App() {\n  const name = 'helloworld';\n  const style = {\n    backgroundColor: 'black',\n    color: 'aqua',\n    fontSize:24,\n    padding: '1rem'\n  };\n  return (\n    <>\n      <Wrapper>\n        <Hello name=\"이것은프롭스\" color=\"red\" isSpecial />\n        <Hello />\n        <div style = {style}>{name}</div>\n        <div className=\"gray-box\"></div>\n      </Wrapper>\n\n      <Wrapper>\n        <Counter />\n      </Wrapper>\n      \n      <Wrapper>\n        <InputSample />\n      </Wrapper>\n\n      <Wrapper>\n        <AppUser />\n      </Wrapper>\n    </>\n  );\n}\n\nconst initialState={\n  inputs:{\n    username:'',email:''\n  },\n  users:[\n    {\n      id:1,username:'velopert',email:'p@gmail.com',active:true\n    },\n    {\n      id:2,username:'tester',email:'t@example.com',active:false\n    },\n    {\n      id:3,username:'subin',email:'kiju23@naver.com',active:false\n    }\n  ]\n};\n\nfunction reducer(state,action){\n  switch(action.type){\n    case 'CREATE_USER':\n      return{\n        users:state.users.concat(action.user)\n      };\n    case 'TOGGLE_USER':\n      return{\n        users:state.users.map(user=>\n          user.id===action.id?{...user, active: !user.active}:user)\n      };\n    case 'REMOVE_USER':\n      return{\n        users:state.users.filter(user=>user.id!==action.id)\n      };\n    default:\n      return state;\n  }\n}\n\nfunction AppUser(){\n  const [{username, email},onChange,reset] = useInputs({\n    username:'',\n    email:''\n  });\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const {users}=state;\n  const nextID = useRef(4);\n\n  const onCreate=useCallback(()=>{\n    dispatch({\n      type:'CREATE_USER',\n      user:{\n        id: nextID.current,\n        username,email\n      }\n    });\n    reset();\n    nextID.current+=1;\n  },[username,email,reset]);\n\n  const onToggle=useCallback(id=>{\n    dispatch({\n      type:'TOGGLE_USER',id\n    });\n  }, []);\n\n  const onRemove = useCallback(id=>{\n    dispatch({\n      type:'REMOVE_USER',id\n    });\n  },[]);\n\n  const count = useMemo(()=>countActiveUsers(users),[users]);\n\n  return(\n    <>\n      <CreateUser username={username} email={email} onChange={onChange} onCreate={onCreate} />\n      <UserList users={users} onToggle={onToggle} onRemove={onRemove}/>\n      <div>active user : {count}</div>\n    </>\n  )\n}\n\nfunction countActiveUsers(users){\n  console.log('active 사용자 수 세는 중...');\n  return users.filter(user=>user.active).length;\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}