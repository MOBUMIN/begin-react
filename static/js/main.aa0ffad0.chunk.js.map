{"version":3,"sources":["Hello.js","Wrapper.js","Counter.js","InputSample.js","App.js","reportWebVitals.js","index.js"],"names":["Hello","color","name","isSpecial","style","defaultProps","Wrapper","children","border","padding","margin","Counter","useState","number","setNumber","onClick","prevNumber","InputSample","text","setText","onChange","e","target","value","App","backgroundColor","fontSize","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAEA,SAASA,EAAT,GAA0C,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,UAC3B,OAAO,sBAAKC,MAAO,CAAEH,SAAd,UACDE,GAAa,kCADZ,4BAEGD,KAIZF,EAAMK,aAAa,CACfH,KAAM,4BAGKF,Q,MCEAM,MAbf,YAA8B,IAAZC,EAAW,EAAXA,SAMhB,OACE,qBAAKH,MANO,CACZI,OAAQ,kBACRC,QAAQ,GACRC,OAAO,IAGP,SACKH,K,OCUMI,MAlBf,WAAkB,MAEcC,mBAAS,GAFvB,mBAEPC,EAFO,KAECC,EAFD,KAUd,OACI,gCACI,6BAAKD,IACL,wBAAQE,QATG,WACfD,GAAU,SAAAE,GAAU,OAAIA,EAAW,MAQ/B,gBACA,wBAAQD,QAPG,WACfD,GAAU,SAAAE,GAAU,OAAIA,EAAW,MAM/B,oBCQGC,MArBf,WAAuB,IAAD,EACKL,mBAAS,IADd,mBACXM,EADW,KACNC,EADM,KAUlB,OACI,gCACI,uBAAOC,SATE,SAACC,GACdF,EAAQE,EAAEC,OAAOC,QAQcA,MAAOL,IAClC,wBAAQH,QANF,WACVI,EAAQ,KAKJ,mBACA,8BACI,yCAAYD,WCiBbM,MA5Bf,WAQE,OACE,qCACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAOtB,KAAK,uCAASD,MAAM,MAAME,WAAS,IAC1C,cAAC,EAAD,IACA,qBAAKC,MAXG,CACZqB,gBAAiB,QACjBxB,MAAO,OACPyB,SAAS,GACTjB,QAAS,QAOL,SAZO,eAaP,qBAAKkB,UAAU,gBAGjB,cAAC,EAAD,UACE,cAAC,EAAD,MAGF,cAAC,EAAD,UACE,cAAC,EAAD,UCjBOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.aa0ffad0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Hello({color, name, isSpecial}) {\r\n  return <div style={{ color }}>\r\n      { isSpecial && <b>*</b>}\r\n      헬로월드 {name}\r\n      </div>\r\n}\r\n\r\nHello.defaultProps={\r\n    name: '노프롭스'\r\n}\r\n\r\nexport default Hello;","import React from 'react';\r\n\r\nfunction Wrapper({children}) {\r\n  const style = {\r\n    border: '2px solid black',\r\n    padding:16,\r\n    margin:16,\r\n  };\r\n  return (\r\n    <div style={style}>\r\n        {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Wrapper;","import React, { useState } from 'react';\r\n\r\nfunction Counter(){\r\n    // [현재 상태, Setter 함수]\r\n    const [number, setNumber] = useState(0);\r\n\r\n    const onIncrease = () => {\r\n        setNumber(prevNumber => prevNumber+1);\r\n    }\r\n    const onDecrease = () => {\r\n        setNumber(prevNumber => prevNumber-1);\r\n    }\r\n    return(\r\n        <div>\r\n            <h1>{number}</h1>\r\n            <button onClick={onIncrease}>+1</button>\r\n            <button onClick={onDecrease}>-1</button>\r\n        </div>\r\n    );\r\n}\r\nexport default Counter;","import React, {useState} from 'react';\r\n\r\n// input 에 입력하는 값이 하단에 나타나게 하고, 초기화 버튼을 누르면 input 이 값이 비워지도록\r\nfunction InputSample(){\r\n    const [text,setText] = useState('');\r\n\r\n    const onChange = (e) =>{\r\n        setText(e.target.value);\r\n    }\r\n    \r\n    const onReset=()=>{\r\n        setText('');\r\n    }\r\n    return(\r\n        <div>\r\n            <input onChange={onChange} value={text} />\r\n            <button onClick={onReset}>reset</button>\r\n            <div>\r\n                <b>value : {text}</b>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputSample;","import React from 'react';\nimport Hello from './Hello';\nimport './App.css';\nimport Wrapper from './Wrapper';\nimport Counter from './Counter';\nimport InputSample from './InputSample';\n\nfunction App() {\n  const name = 'helloworld';\n  const style = {\n    backgroundColor: 'black',\n    color: 'aqua',\n    fontSize:24,\n    padding: '1rem'\n  }\n  return (\n    <>\n      <Wrapper>\n        <Hello name=\"이것은프롭스\" color=\"red\" isSpecial />\n        <Hello />\n        <div style = {style}>{name}</div>\n        <div className=\"gray-box\"></div>\n      </Wrapper>\n\n      <Wrapper>\n        <Counter />\n      </Wrapper>\n      \n      <Wrapper>\n        <InputSample />\n      </Wrapper>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}